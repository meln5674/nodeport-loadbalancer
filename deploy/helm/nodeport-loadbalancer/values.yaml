config:
  controller:
    include:
      # If false, nodes with the node-role label of "master", "control-plane", and "etcd" will be excluded from ingresses
      controlPlaneNodes: false
      # If true, node hostnames will be included in ingresses
      hostnames: true
      # If true, node External IPs will be included in ingresses
      externalIPs: true
      # If true, node Interanal IPs will be included in ingresses
      internalIPs: false
  manager:
    leaderElection:
      # If true, leader election will be used to ensure that only one pod is ever managing service ingresses
      enabled: true
      # Configuration for leader election
      lease: 15s
      renew: 10s
      retry: 2s

replicaCount: 1

image:
  registry: ghcr.io
  repository: meln5674/nodeport-loadbalancer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  create: true

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  metricsPort: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
