apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodeport-loadbalancer.fullname" . }}
  labels:
    {{- include "nodeport-loadbalancer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nodeport-loadbalancer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nodeport-loadbalancer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nodeport-loadbalancer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          - name: POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          args:
          - --include-control-plane-nodes={{ .Values.config.controller.include.controlPlaneNodes }}
          - --include-hostnames={{ .Values.config.controller.include.hostnames }}
          - --include-external-ips={{ .Values.config.controller.include.externalIPs }}
          - --include-internal-ips={{ .Values.config.controller.include.internalIPs }}
          - --leader-election-enabled={{ .Values.config.manager.leaderElection.enabled }}
          - --leader-election-id=$(POD_UID).$(POD_NAMESPACE).$(POD_NAME)
          - --leader-election-lease={{ .Values.config.manager.leaderElection.lease }}
          - --leader-election-renew={{ .Values.config.manager.leaderElection.renew }}
          - --leader-election-retry={{ .Values.config.manager.leaderElection.retry }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: probe
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: probe
          readinessProbe:
            httpGet:
              path: /readyz
              port: probe
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
